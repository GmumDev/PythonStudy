'''

N장의 카드가 있다. 각각의 카드는 차례로 1부터 N까지의 번호가 붙어 있으며, 
1번 카드가 제일 위에, N번 카드가 제일 아래인 상태로 순서대로 카드가 놓여 있다.
이제 다음과 같은 동작을 카드가 한 장 남을 때까지 반복하게 된다. 
우선, 제일 위에 있는 카드를 바닥에 버린다. 
그 다음, 제일 위에 있는 카드를 제일 아래에 있는 카드 밑으로 옮긴다.
#예를 들어 N=4인 경우를 생각해 보자. 카드는 제일 위에서부터 1234 의 순서로 놓여있다. 
#1을 버리면 234가 남는다. 여기서 2를 제일 아래로 옮기면 342가 된다. 3을 버리면 42가 되고, 
#4를 밑으로 옮기면 24가 된다. 마지막으로 2를 버리고 나면, 남는 카드는 4가 된다.
N이 주어졌을 때, 제일 마지막에 남게 되는 카드를 구하는 프로그램을 작성하시오.

첫째 줄에 정수 N(1 ≤ N ≤ 500,000)이 주어진다
첫째 줄에 남게 되는 카드의 번호를 출력한다.
'''


# for n in range(1, 100):

#     discard = True

#     a = [i for i in range(1, n + 1)]

#     while len(a) > 1:
#         if discard:
#             a.pop(0)
#             discard = False
#         else:
#             discard = True
#             t = a.pop(0)
#             a.append(t)

#     print(n, a.pop(0))

# --------------------
'''
n = 2**k|  k  | last card
----------------------------
1       |  0  | 1
2       |  1  | 2
3~4     |  2  | 2, 4
5~8     |  3  | 2, 4, 6, 8
9~16    |  4  | 2, 4, 6, ... , 16
17~32   |  5  | 2, 4, 6, ... , 32
33~64   |  6  | 2, 4, 6, ... , 64
...
Therefore, 
1. find k for n
2. n = n - 2**(k-1)
3. lastcard = 2n

'''

# 1 ~ 500000
n = int(input())

# 1) find k for n
k = 0
while n - 2**k - 1 >= 0:
    k += 1

if n == 1:
    print(1)
else:
    # 2) n = n - 2**(k-1)
    n = n - 2**(k-1)

    # 3) lastcard = 2n
    lastcard = 2*n
    print(lastcard)